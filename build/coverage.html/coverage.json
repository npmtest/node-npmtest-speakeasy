{"/home/travis/build/npmtest/node-npmtest-speakeasy/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-speakeasy/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_speakeasy */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-speakeasy/lib.npmtest_speakeasy.js":{"path":"/home/travis/build/npmtest/node-npmtest-speakeasy/lib.npmtest_speakeasy.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_speakeasy */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_speakeasy = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_speakeasy = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-speakeasy/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-speakeasy/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":67},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-speakeasy && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_speakeasy */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_speakeasy","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_speakeasy.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_speakeasy.rollup.js'] =","            local.assetsDict['/assets.npmtest_speakeasy.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_speakeasy.__dirname + '/lib.npmtest_speakeasy.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-speakeasy/node_modules/speakeasy/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-speakeasy/node_modules/speakeasy/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":1,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0,0,0],"50":[0,0],"51":[0,0],"52":[0,0,0],"53":[0,0],"54":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"digest","line":23,"loc":{"start":{"line":23,"column":17},"end":{"line":23,"column":43}}},"2":{"name":"hotpGenerate","line":88,"loc":{"start":{"line":88,"column":15},"end":{"line":88,"column":47}}},"3":{"name":"hotpVerifyDelta","line":153,"loc":{"start":{"line":153,"column":27},"end":{"line":153,"column":62}}},"4":{"name":"hotpVerify","line":217,"loc":{"start":{"line":217,"column":22},"end":{"line":217,"column":52}}},"5":{"name":"_counter","line":239,"loc":{"start":{"line":239,"column":19},"end":{"line":239,"column":47}}},"6":{"name":"totpGenerate","line":285,"loc":{"start":{"line":285,"column":15},"end":{"line":285,"column":47}}},"7":{"name":"totpVerifyDelta","line":345,"loc":{"start":{"line":345,"column":27},"end":{"line":345,"column":62}}},"8":{"name":"totpVerify","line":401,"loc":{"start":{"line":401,"column":22},"end":{"line":401,"column":52}}},"9":{"name":"generateSecret","line":442,"loc":{"start":{"line":442,"column":25},"end":{"line":442,"column":59}}},"10":{"name":"(anonymous_10)","line":492,"loc":{"start":{"line":492,"column":38},"end":{"line":492,"column":57}}},"11":{"name":"generateSecretASCII","line":504,"loc":{"start":{"line":504,"column":30},"end":{"line":504,"column":77}}},"12":{"name":"(anonymous_12)","line":519,"loc":{"start":{"line":519,"column":44},"end":{"line":519,"column":71}}},"13":{"name":"otpauthURL","line":563,"loc":{"start":{"line":563,"column":21},"end":{"line":563,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"5":{"start":{"line":23,"column":0},"end":{"line":63,"column":2}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":8}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":30}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":32}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":45}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":62}},"11":{"start":{"line":33,"column":2},"end":{"line":36,"column":3}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":133}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":25}},"14":{"start":{"line":39,"column":2},"end":{"line":42,"column":3}},"15":{"start":{"line":40,"column":4},"end":{"line":41,"column":37}},"16":{"start":{"line":45,"column":2},"end":{"line":45,"column":26}},"17":{"start":{"line":46,"column":2},"end":{"line":46,"column":20}},"18":{"start":{"line":47,"column":2},"end":{"line":53,"column":3}},"19":{"start":{"line":49,"column":4},"end":{"line":49,"column":28}},"20":{"start":{"line":52,"column":4},"end":{"line":52,"column":19}},"21":{"start":{"line":56,"column":2},"end":{"line":56,"column":50}},"22":{"start":{"line":59,"column":2},"end":{"line":59,"column":19}},"23":{"start":{"line":62,"column":2},"end":{"line":62,"column":23}},"24":{"start":{"line":88,"column":0},"end":{"line":111,"column":2}},"25":{"start":{"line":91,"column":2},"end":{"line":91,"column":79}},"26":{"start":{"line":92,"column":2},"end":{"line":92,"column":164}},"27":{"start":{"line":92,"column":30},"end":{"line":92,"column":164}},"28":{"start":{"line":95,"column":2},"end":{"line":95,"column":57}},"29":{"start":{"line":98,"column":2},"end":{"line":98,"column":47}},"30":{"start":{"line":101,"column":2},"end":{"line":104,"column":32}},"31":{"start":{"line":107,"column":2},"end":{"line":107,"column":61}},"32":{"start":{"line":110,"column":2},"end":{"line":110,"column":30}},"33":{"start":{"line":114,"column":0},"end":{"line":114,"column":31}},"34":{"start":{"line":153,"column":0},"end":{"line":189,"column":2}},"35":{"start":{"line":154,"column":2},"end":{"line":154,"column":8}},"36":{"start":{"line":157,"column":2},"end":{"line":157,"column":35}},"37":{"start":{"line":160,"column":2},"end":{"line":160,"column":36}},"38":{"start":{"line":161,"column":2},"end":{"line":161,"column":49}},"39":{"start":{"line":162,"column":2},"end":{"line":162,"column":49}},"40":{"start":{"line":163,"column":2},"end":{"line":163,"column":51}},"41":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"42":{"start":{"line":167,"column":4},"end":{"line":167,"column":11}},"43":{"start":{"line":171,"column":2},"end":{"line":171,"column":30}},"44":{"start":{"line":174,"column":2},"end":{"line":176,"column":3}},"45":{"start":{"line":175,"column":4},"end":{"line":175,"column":11}},"46":{"start":{"line":179,"column":2},"end":{"line":186,"column":3}},"47":{"start":{"line":180,"column":4},"end":{"line":180,"column":24}},"48":{"start":{"line":182,"column":4},"end":{"line":185,"column":5}},"49":{"start":{"line":184,"column":6},"end":{"line":184,"column":34}},"50":{"start":{"line":217,"column":0},"end":{"line":219,"column":2}},"51":{"start":{"line":218,"column":2},"end":{"line":218,"column":51}},"52":{"start":{"line":239,"column":0},"end":{"line":248,"column":2}},"53":{"start":{"line":240,"column":2},"end":{"line":240,"column":32}},"54":{"start":{"line":241,"column":2},"end":{"line":241,"column":71}},"55":{"start":{"line":244,"column":2},"end":{"line":244,"column":100}},"56":{"start":{"line":245,"column":2},"end":{"line":245,"column":172}},"57":{"start":{"line":245,"column":36},"end":{"line":245,"column":172}},"58":{"start":{"line":247,"column":2},"end":{"line":247,"column":50}},"59":{"start":{"line":285,"column":0},"end":{"line":294,"column":2}},"60":{"start":{"line":287,"column":2},"end":{"line":287,"column":35}},"61":{"start":{"line":290,"column":2},"end":{"line":290,"column":75}},"62":{"start":{"line":290,"column":31},"end":{"line":290,"column":75}},"63":{"start":{"line":293,"column":2},"end":{"line":293,"column":28}},"64":{"start":{"line":297,"column":0},"end":{"line":297,"column":28}},"65":{"start":{"line":345,"column":0},"end":{"line":368,"column":2}},"66":{"start":{"line":347,"column":2},"end":{"line":347,"column":35}},"67":{"start":{"line":350,"column":2},"end":{"line":350,"column":49}},"68":{"start":{"line":353,"column":2},"end":{"line":353,"column":75}},"69":{"start":{"line":353,"column":31},"end":{"line":353,"column":75}},"70":{"start":{"line":356,"column":2},"end":{"line":356,"column":28}},"71":{"start":{"line":357,"column":2},"end":{"line":357,"column":27}},"72":{"start":{"line":360,"column":2},"end":{"line":360,"column":48}},"73":{"start":{"line":363,"column":2},"end":{"line":365,"column":3}},"74":{"start":{"line":364,"column":4},"end":{"line":364,"column":26}},"75":{"start":{"line":367,"column":2},"end":{"line":367,"column":15}},"76":{"start":{"line":401,"column":0},"end":{"line":403,"column":2}},"77":{"start":{"line":402,"column":2},"end":{"line":402,"column":51}},"78":{"start":{"line":442,"column":0},"end":{"line":489,"column":2}},"79":{"start":{"line":444,"column":2},"end":{"line":444,"column":29}},"80":{"start":{"line":444,"column":16},"end":{"line":444,"column":29}},"81":{"start":{"line":445,"column":2},"end":{"line":445,"column":36}},"82":{"start":{"line":446,"column":2},"end":{"line":446,"column":61}},"83":{"start":{"line":447,"column":2},"end":{"line":447,"column":43}},"84":{"start":{"line":448,"column":2},"end":{"line":448,"column":55}},"85":{"start":{"line":449,"column":2},"end":{"line":449,"column":77}},"86":{"start":{"line":450,"column":2},"end":{"line":450,"column":21}},"87":{"start":{"line":453,"column":2},"end":{"line":455,"column":3}},"88":{"start":{"line":454,"column":4},"end":{"line":454,"column":20}},"89":{"start":{"line":458,"column":2},"end":{"line":458,"column":54}},"90":{"start":{"line":461,"column":2},"end":{"line":461,"column":21}},"91":{"start":{"line":462,"column":2},"end":{"line":462,"column":24}},"92":{"start":{"line":463,"column":2},"end":{"line":463,"column":55}},"93":{"start":{"line":464,"column":2},"end":{"line":464,"column":77}},"94":{"start":{"line":467,"column":2},"end":{"line":472,"column":3}},"95":{"start":{"line":468,"column":4},"end":{"line":468,"column":163}},"96":{"start":{"line":469,"column":4},"end":{"line":469,"column":138}},"97":{"start":{"line":470,"column":4},"end":{"line":470,"column":134}},"98":{"start":{"line":471,"column":4},"end":{"line":471,"column":140}},"99":{"start":{"line":475,"column":2},"end":{"line":480,"column":3}},"100":{"start":{"line":476,"column":4},"end":{"line":479,"column":7}},"101":{"start":{"line":483,"column":2},"end":{"line":486,"column":3}},"102":{"start":{"line":484,"column":4},"end":{"line":484,"column":173}},"103":{"start":{"line":485,"column":4},"end":{"line":485,"column":185}},"104":{"start":{"line":488,"column":2},"end":{"line":488,"column":19}},"105":{"start":{"line":492,"column":0},"end":{"line":494,"column":111}},"106":{"start":{"line":493,"column":2},"end":{"line":493,"column":41}},"107":{"start":{"line":504,"column":0},"end":{"line":516,"column":2}},"108":{"start":{"line":505,"column":2},"end":{"line":505,"column":47}},"109":{"start":{"line":506,"column":2},"end":{"line":506,"column":76}},"110":{"start":{"line":507,"column":2},"end":{"line":509,"column":3}},"111":{"start":{"line":508,"column":4},"end":{"line":508,"column":36}},"112":{"start":{"line":511,"column":2},"end":{"line":511,"column":18}},"113":{"start":{"line":512,"column":2},"end":{"line":514,"column":3}},"114":{"start":{"line":513,"column":4},"end":{"line":513,"column":67}},"115":{"start":{"line":515,"column":2},"end":{"line":515,"column":16}},"116":{"start":{"line":519,"column":0},"end":{"line":521,"column":122}},"117":{"start":{"line":520,"column":2},"end":{"line":520,"column":54}},"118":{"start":{"line":563,"column":0},"end":{"line":647,"column":2}},"119":{"start":{"line":565,"column":2},"end":{"line":565,"column":30}},"120":{"start":{"line":566,"column":2},"end":{"line":566,"column":28}},"121":{"start":{"line":567,"column":2},"end":{"line":567,"column":30}},"122":{"start":{"line":568,"column":2},"end":{"line":568,"column":52}},"123":{"start":{"line":569,"column":2},"end":{"line":569,"column":32}},"124":{"start":{"line":570,"column":2},"end":{"line":570,"column":36}},"125":{"start":{"line":571,"column":2},"end":{"line":571,"column":30}},"126":{"start":{"line":572,"column":2},"end":{"line":572,"column":30}},"127":{"start":{"line":573,"column":2},"end":{"line":573,"column":45}},"128":{"start":{"line":576,"column":2},"end":{"line":582,"column":3}},"129":{"start":{"line":579,"column":6},"end":{"line":579,"column":12}},"130":{"start":{"line":581,"column":6},"end":{"line":581,"column":104}},"131":{"start":{"line":585,"column":2},"end":{"line":585,"column":74}},"132":{"start":{"line":585,"column":15},"end":{"line":585,"column":74}},"133":{"start":{"line":586,"column":2},"end":{"line":586,"column":72}},"134":{"start":{"line":586,"column":14},"end":{"line":586,"column":72}},"135":{"start":{"line":589,"column":2},"end":{"line":591,"column":3}},"136":{"start":{"line":590,"column":4},"end":{"line":590,"column":79}},"137":{"start":{"line":594,"column":2},"end":{"line":594,"column":67}},"138":{"start":{"line":594,"column":29},"end":{"line":594,"column":67}},"139":{"start":{"line":595,"column":2},"end":{"line":595,"column":62}},"140":{"start":{"line":595,"column":31},"end":{"line":595,"column":62}},"141":{"start":{"line":598,"column":2},"end":{"line":598,"column":31}},"142":{"start":{"line":599,"column":2},"end":{"line":599,"column":36}},"143":{"start":{"line":599,"column":14},"end":{"line":599,"column":36}},"144":{"start":{"line":602,"column":2},"end":{"line":612,"column":3}},"145":{"start":{"line":603,"column":4},"end":{"line":610,"column":5}},"146":{"start":{"line":607,"column":8},"end":{"line":607,"column":14}},"147":{"start":{"line":609,"column":8},"end":{"line":609,"column":113}},"148":{"start":{"line":611,"column":4},"end":{"line":611,"column":46}},"149":{"start":{"line":615,"column":2},"end":{"line":628,"column":3}},"150":{"start":{"line":616,"column":4},"end":{"line":626,"column":5}},"151":{"start":{"line":617,"column":6},"end":{"line":617,"column":82}},"152":{"start":{"line":619,"column":6},"end":{"line":625,"column":7}},"153":{"start":{"line":622,"column":10},"end":{"line":622,"column":16}},"154":{"start":{"line":624,"column":10},"end":{"line":624,"column":102}},"155":{"start":{"line":627,"column":4},"end":{"line":627,"column":26}},"156":{"start":{"line":631,"column":2},"end":{"line":637,"column":3}},"157":{"start":{"line":632,"column":4},"end":{"line":632,"column":34}},"158":{"start":{"line":633,"column":4},"end":{"line":635,"column":5}},"159":{"start":{"line":634,"column":6},"end":{"line":634,"column":82}},"160":{"start":{"line":636,"column":4},"end":{"line":636,"column":26}},"161":{"start":{"line":640,"column":2},"end":{"line":646,"column":5}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":17},"end":{"line":29,"column":33}},{"start":{"line":29,"column":37},"end":{"line":29,"column":44}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":19},"end":{"line":30,"column":36}},{"start":{"line":30,"column":40},"end":{"line":30,"column":46}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"5":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":37},"end":{"line":40,"column":58}},{"start":{"line":41,"column":8},"end":{"line":41,"column":36}}]},"6":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":16},"end":{"line":91,"column":72}},{"start":{"line":91,"column":77},"end":{"line":91,"column":78}}]},"7":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":41},"end":{"line":91,"column":55}},{"start":{"line":91,"column":58},"end":{"line":91,"column":72}}]},"8":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"9":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":15},"end":{"line":95,"column":29}},{"start":{"line":95,"column":33},"end":{"line":95,"column":56}}]},"10":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":15},"end":{"line":161,"column":43}},{"start":{"line":161,"column":47},"end":{"line":161,"column":48}}]},"11":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":15},"end":{"line":162,"column":43}},{"start":{"line":162,"column":47},"end":{"line":162,"column":48}}]},"12":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":16},"end":{"line":163,"column":45}},{"start":{"line":163,"column":49},"end":{"line":163,"column":50}}]},"13":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"14":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"15":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]},"16":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":13},"end":{"line":240,"column":25}},{"start":{"line":240,"column":29},"end":{"line":240,"column":31}}]},"17":{"line":241,"type":"cond-expr","locations":[{"start":{"line":241,"column":37},"end":{"line":241,"column":56}},{"start":{"line":241,"column":60},"end":{"line":241,"column":70}}]},"18":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":15},"end":{"line":244,"column":93}},{"start":{"line":244,"column":98},"end":{"line":244,"column":99}}]},"19":{"line":244,"type":"cond-expr","locations":[{"start":{"line":244,"column":40},"end":{"line":244,"column":60}},{"start":{"line":244,"column":65},"end":{"line":244,"column":92}}]},"20":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":2},"end":{"line":245,"column":2}},{"start":{"line":245,"column":2},"end":{"line":245,"column":2}}]},"21":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":2},"end":{"line":290,"column":2}},{"start":{"line":290,"column":2},"end":{"line":290,"column":2}}]},"22":{"line":350,"type":"binary-expr","locations":[{"start":{"line":350,"column":15},"end":{"line":350,"column":43}},{"start":{"line":350,"column":47},"end":{"line":350,"column":48}}]},"23":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":2},"end":{"line":353,"column":2}},{"start":{"line":353,"column":2},"end":{"line":353,"column":2}}]},"24":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":2},"end":{"line":363,"column":2}},{"start":{"line":363,"column":2},"end":{"line":363,"column":2}}]},"25":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":2},"end":{"line":444,"column":2}},{"start":{"line":444,"column":2},"end":{"line":444,"column":2}}]},"26":{"line":445,"type":"binary-expr","locations":[{"start":{"line":445,"column":15},"end":{"line":445,"column":29}},{"start":{"line":445,"column":33},"end":{"line":445,"column":35}}]},"27":{"line":446,"type":"binary-expr","locations":[{"start":{"line":446,"column":32},"end":{"line":446,"column":44}},{"start":{"line":446,"column":48},"end":{"line":446,"column":59}}]},"28":{"line":447,"type":"binary-expr","locations":[{"start":{"line":447,"column":17},"end":{"line":447,"column":33}},{"start":{"line":447,"column":37},"end":{"line":447,"column":42}}]},"29":{"line":448,"type":"binary-expr","locations":[{"start":{"line":448,"column":23},"end":{"line":448,"column":45}},{"start":{"line":448,"column":49},"end":{"line":448,"column":54}}]},"30":{"line":449,"type":"cond-expr","locations":[{"start":{"line":449,"column":50},"end":{"line":449,"column":69}},{"start":{"line":449,"column":72},"end":{"line":449,"column":76}}]},"31":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":2},"end":{"line":453,"column":2}},{"start":{"line":453,"column":2},"end":{"line":453,"column":2}}]},"32":{"line":453,"type":"binary-expr","locations":[{"start":{"line":453,"column":6},"end":{"line":453,"column":35}},{"start":{"line":453,"column":39},"end":{"line":453,"column":64}}]},"33":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":2},"end":{"line":467,"column":2}},{"start":{"line":467,"column":2},"end":{"line":467,"column":2}}]},"34":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":2},"end":{"line":475,"column":2}},{"start":{"line":475,"column":2},"end":{"line":475,"column":2}}]},"35":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":2},"end":{"line":483,"column":2}},{"start":{"line":483,"column":2},"end":{"line":483,"column":2}}]},"36":{"line":505,"type":"binary-expr","locations":[{"start":{"line":505,"column":33},"end":{"line":505,"column":39}},{"start":{"line":505,"column":43},"end":{"line":505,"column":45}}]},"37":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":2},"end":{"line":507,"column":2}},{"start":{"line":507,"column":2},"end":{"line":507,"column":2}}]},"38":{"line":568,"type":"binary-expr","locations":[{"start":{"line":568,"column":14},"end":{"line":568,"column":26}},{"start":{"line":568,"column":30},"end":{"line":568,"column":36}}]},"39":{"line":573,"type":"binary-expr","locations":[{"start":{"line":573,"column":17},"end":{"line":573,"column":33}},{"start":{"line":573,"column":37},"end":{"line":573,"column":44}}]},"40":{"line":576,"type":"switch","locations":[{"start":{"line":577,"column":4},"end":{"line":577,"column":16}},{"start":{"line":578,"column":4},"end":{"line":579,"column":12}},{"start":{"line":580,"column":4},"end":{"line":581,"column":104}}]},"41":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":2},"end":{"line":585,"column":2}},{"start":{"line":585,"column":2},"end":{"line":585,"column":2}}]},"42":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":2},"end":{"line":586,"column":2}},{"start":{"line":586,"column":2},"end":{"line":586,"column":2}}]},"43":{"line":589,"type":"if","locations":[{"start":{"line":589,"column":2},"end":{"line":589,"column":2}},{"start":{"line":589,"column":2},"end":{"line":589,"column":2}}]},"44":{"line":589,"type":"binary-expr","locations":[{"start":{"line":589,"column":6},"end":{"line":589,"column":21}},{"start":{"line":589,"column":26},"end":{"line":589,"column":42}},{"start":{"line":589,"column":46},"end":{"line":589,"column":76}}]},"45":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":2},"end":{"line":594,"column":2}},{"start":{"line":594,"column":2},"end":{"line":594,"column":2}}]},"46":{"line":595,"type":"if","locations":[{"start":{"line":595,"column":2},"end":{"line":595,"column":2}},{"start":{"line":595,"column":2},"end":{"line":595,"column":2}}]},"47":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":2},"end":{"line":599,"column":2}},{"start":{"line":599,"column":2},"end":{"line":599,"column":2}}]},"48":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":2},"end":{"line":602,"column":2}},{"start":{"line":602,"column":2},"end":{"line":602,"column":2}}]},"49":{"line":603,"type":"switch","locations":[{"start":{"line":604,"column":6},"end":{"line":604,"column":18}},{"start":{"line":605,"column":6},"end":{"line":605,"column":20}},{"start":{"line":606,"column":6},"end":{"line":607,"column":14}},{"start":{"line":608,"column":6},"end":{"line":609,"column":113}}]},"50":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":2},"end":{"line":615,"column":2}},{"start":{"line":615,"column":2},"end":{"line":615,"column":2}}]},"51":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":4},"end":{"line":616,"column":4}},{"start":{"line":616,"column":4},"end":{"line":616,"column":4}}]},"52":{"line":619,"type":"switch","locations":[{"start":{"line":620,"column":8},"end":{"line":620,"column":15}},{"start":{"line":621,"column":8},"end":{"line":622,"column":16}},{"start":{"line":623,"column":8},"end":{"line":624,"column":102}}]},"53":{"line":631,"type":"if","locations":[{"start":{"line":631,"column":2},"end":{"line":631,"column":2}},{"start":{"line":631,"column":2},"end":{"line":631,"column":2}}]},"54":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":4},"end":{"line":633,"column":4}},{"start":{"line":633,"column":4},"end":{"line":633,"column":4}}]}},"code":["'use strict';","","var base32 = require('base32.js');","var crypto = require('crypto');","var url = require('url');","var util = require('util');","","/**"," * Digest the one-time passcode options."," *"," * @param {Object} options"," * @param {String} options.secret Shared secret key"," * @param {Integer} options.counter Counter value"," * @param {String} [options.encoding=\"ascii\"] Key encoding (ascii, hex,"," *   base32, base64)."," * @param {String} [options.algorithm=\"sha1\"] Hash algorithm (sha1, sha256,"," *   sha512)."," * @param {String} [options.key] (DEPRECATED. Use `secret` instead.)"," *   Shared secret key"," * @return {Buffer} The one-time passcode as a buffer."," */","","exports.digest = function digest (options) {","  var i;","","  // unpack options","  var secret = options.secret;","  var counter = options.counter;","  var encoding = options.encoding || 'ascii';","  var algorithm = (options.algorithm || 'sha1').toLowerCase();","","  // Backwards compatibility - deprecated","  if (options.key != null) {","    console.warn('Speakeasy - Deprecation Notice - Specifying the secret using `key` is no longer supported. Use `secret` instead.');","    secret = options.key;","  }","","  // convert secret to buffer","  if (!Buffer.isBuffer(secret)) {","    secret = encoding === 'base32' ? base32.decode(secret)","      : new Buffer(secret, encoding);","  }","","  // create an buffer from the counter","  var buf = new Buffer(8);","  var tmp = counter;","  for (i = 0; i < 8; i++) {","    // mask 0xff over number to get last 8","    buf[7 - i] = tmp & 0xff;","","    // shift 8 and get ready to loop over the next batch of 8","    tmp = tmp >> 8;","  }","","  // init hmac with the key","  var hmac = crypto.createHmac(algorithm, secret);","","  // update hmac with the counter","  hmac.update(buf);","","  // return the digest","  return hmac.digest();","};","","/**"," * Generate a counter-based one-time token. Specify the key and counter, and"," * receive the one-time password for that counter position as a string. You can"," * also specify a token length, as well as the encoding (ASCII, hexadecimal, or"," * base32) and the hashing algorithm to use (SHA1, SHA256, SHA512)."," *"," * @param {Object} options"," * @param {String} options.secret Shared secret key"," * @param {Integer} options.counter Counter value"," * @param {Buffer} [options.digest] Digest, automatically generated by default"," * @param {Integer} [options.digits=6] The number of digits for the one-time"," *   passcode."," * @param {String} [options.encoding=\"ascii\"] Key encoding (ascii, hex,"," *   base32, base64)."," * @param {String} [options.algorithm=\"sha1\"] Hash algorithm (sha1, sha256,"," *   sha512)."," * @param {String} [options.key] (DEPRECATED. Use `secret` instead.)"," *   Shared secret key"," * @param {Integer} [options.length=6] (DEPRECATED. Use `digits` instead.) The"," *   number of digits for the one-time passcode."," * @return {String} The one-time passcode."," */","","exports.hotp = function hotpGenerate (options) {","  // unpack digits","  // backward compatibility: `length` is also accepted here, but deprecated","  var digits = (options.digits != null ? options.digits : options.length) || 6;","  if (options.length != null) console.warn('Speakeasy - Deprecation Notice - Specifying token digits using `length` is no longer supported. Use `digits` instead.');","","  // digest the options","  var digest = options.digest || exports.digest(options);","","  // compute HOTP offset","  var offset = digest[digest.length - 1] & 0xf;","","  // calculate binary code (RFC4226 5.4)","  var code = (digest[offset] & 0x7f) << 24 |","    (digest[offset + 1] & 0xff) << 16 |","    (digest[offset + 2] & 0xff) << 8 |","    (digest[offset + 3] & 0xff);","","  // left-pad code","  code = new Array(digits + 1).join('0') + code.toString(10);","","  // return length number off digits","  return code.substr(-digits);","};","","// Alias counter() for hotp()","exports.counter = exports.hotp;","","/**"," * Verify a counter-based one-time token against the secret and return the delta."," * By default, it verifies the token at the given counter value, with no leeway"," * (no look-ahead or look-behind). A token validated at the current counter value"," * will have a delta of 0."," *"," * You can specify a window to add more leeway to the verification process."," * Setting the window param will check for the token at the given counter value"," * as well as `window` tokens ahead (one-sided window). See param for more info."," *"," * `verifyDelta()` will return the delta between the counter value of the token"," * and the given counter value. For example, if given a counter 5 and a window"," * 10, `verifyDelta()` will look at tokens from 5 to 15, inclusive. If it finds"," * it at counter position 7, it will return `{ delta: 2 }`."," *"," * @param {Object} options"," * @param {String} options.secret Shared secret key"," * @param {String} options.token Passcode to validate"," * @param {Integer} options.counter Counter value. This should be stored by"," *   the application and must be incremented for each request."," * @param {Integer} [options.digits=6] The number of digits for the one-time"," *   passcode."," * @param {Integer} [options.window=0] The allowable margin for the counter."," *   The function will check \"W\" codes in the future against the provided"," *   passcode, e.g. if W = 10, and C = 5, this function will check the"," *   passcode against all One Time Passcodes between 5 and 15, inclusive."," * @param {String} [options.encoding=\"ascii\"] Key encoding (ascii, hex,"," *   base32, base64)."," * @param {String} [options.algorithm=\"sha1\"] Hash algorithm (sha1, sha256,"," *   sha512)."," * @return {Object} On success, returns an object with the counter"," *   difference between the client and the server as the `delta` property (i.e."," *   `{ delta: 0 }`)."," * @method hotp․verifyDelta"," * @global"," */","","exports.hotp.verifyDelta = function hotpVerifyDelta (options) {","  var i;","","  // shadow options","  options = Object.create(options);","","  // unpack options","  var token = String(options.token);","  var digits = parseInt(options.digits, 10) || 6;","  var window = parseInt(options.window, 10) || 0;","  var counter = parseInt(options.counter, 10) || 0;","","  // fail if token is not of correct length","  if (token.length !== digits) {","    return;","  }","","  // parse token to integer","  token = parseInt(token, 10);","","  // fail if token is NA","  if (isNaN(token)) {","    return;","  }","","  // loop from C to C + W inclusive","  for (i = counter; i <= counter + window; ++i) {","    options.counter = i;","    // domain-specific constant-time comparison for integer codes","    if (parseInt(exports.hotp(options), 10) === token) {","      // found a matching code, return delta","      return {delta: i - counter};","    }","  }","","  // no codes have matched","};","","/**"," * Verify a counter-based one-time token against the secret and return true if"," * it verifies. Helper function for `hotp.verifyDelta()`` that returns a boolean"," * instead of an object. For more on how to use a window with this, see"," * {@link hotp.verifyDelta}."," *"," * @param {Object} options"," * @param {String} options.secret Shared secret key"," * @param {String} options.token Passcode to validate"," * @param {Integer} options.counter Counter value. This should be stored by"," *   the application and must be incremented for each request."," * @param {Integer} [options.digits=6] The number of digits for the one-time"," *   passcode."," * @param {Integer} [options.window=0] The allowable margin for the counter."," *   The function will check \"W\" codes in the future against the provided"," *   passcode, e.g. if W = 10, and C = 5, this function will check the"," *   passcode against all One Time Passcodes between 5 and 15, inclusive."," * @param {String} [options.encoding=\"ascii\"] Key encoding (ascii, hex,"," *   base32, base64)."," * @param {String} [options.algorithm=\"sha1\"] Hash algorithm (sha1, sha256,"," *   sha512)."," * @return {Boolean} Returns true if the token matches within the given"," *   window, false otherwise."," * @method hotp․verify"," * @global"," */","exports.hotp.verify = function hotpVerify (options) {","  return exports.hotp.verifyDelta(options) != null;","};","","/**"," * Calculate counter value based on given options. A counter value converts a"," * TOTP time into a counter value by finding the number of time steps that have"," * passed since the epoch to the current time."," *"," * @param {Object} options"," * @param {Integer} [options.time] Time in seconds with which to calculate"," *   counter value. Defaults to `Date.now()`."," * @param {Integer} [options.step=30] Time step in seconds"," * @param {Integer} [options.epoch=0] Initial time since the UNIX epoch from"," *   which to calculate the counter value. Defaults to 0 (no offset)."," * @param {Integer} [options.initial_time=0] (DEPRECATED. Use `epoch` instead.)"," *   Initial time in seconds since the UNIX epoch from which to calculate the"," *   counter value. Defaults to 0 (no offset)."," * @return {Integer} The calculated counter value."," * @private"," */","","exports._counter = function _counter (options) {","  var step = options.step || 30;","  var time = options.time != null ? (options.time * 1000) : Date.now();","","  // also accepts 'initial_time', but deprecated","  var epoch = (options.epoch != null ? (options.epoch * 1000) : (options.initial_time * 1000)) || 0;","  if (options.initial_time != null) console.warn('Speakeasy - Deprecation Notice - Specifying the epoch using `initial_time` is no longer supported. Use `epoch` instead.');","","  return Math.floor((time - epoch) / step / 1000);","};","","/**"," * Generate a time-based one-time token. Specify the key, and receive the"," * one-time password for that time as a string. By default, it uses the current"," * time and a time step of 30 seconds, so there is a new token every 30 seconds."," * You may override the time step and epoch for custom timing. You can also"," * specify a token length, as well as the encoding (ASCII, hexadecimal, or"," * base32) and the hashing algorithm to use (SHA1, SHA256, SHA512)."," *"," * Under the hood, TOTP calculates the counter value by finding how many time"," * steps have passed since the epoch, and calls HOTP with that counter value."," *"," * @param {Object} options"," * @param {String} options.secret Shared secret key"," * @param {Integer} [options.time] Time in seconds with which to calculate"," *   counter value. Defaults to `Date.now()`."," * @param {Integer} [options.step=30] Time step in seconds"," * @param {Integer} [options.epoch=0] Initial time in seconds since the UNIX"," *   epoch from which to calculate the counter value. Defaults to 0 (no offset)."," * @param {Integer} [options.counter] Counter value, calculated by default."," * @param {Integer} [options.digits=6] The number of digits for the one-time"," *   passcode."," * @param {String} [options.encoding=\"ascii\"] Key encoding (ascii, hex,"," *   base32, base64)."," * @param {String} [options.algorithm=\"sha1\"] Hash algorithm (sha1, sha256,"," *   sha512)."," * @param {String} [options.key] (DEPRECATED. Use `secret` instead.)"," *   Shared secret key"," * @param {Integer} [options.initial_time=0] (DEPRECATED. Use `epoch` instead.)"," *   Initial time in seconds since the UNIX epoch from which to calculate the"," *   counter value. Defaults to 0 (no offset)."," * @param {Integer} [options.length=6] (DEPRECATED. Use `digits` instead.) The"," *   number of digits for the one-time passcode."," * @return {String} The one-time passcode."," */","","exports.totp = function totpGenerate (options) {","  // shadow options","  options = Object.create(options);","","  // calculate default counter value","  if (options.counter == null) options.counter = exports._counter(options);","","  // pass to hotp","  return this.hotp(options);","};","","// Alias time() for totp()","exports.time = exports.totp;","","/**"," * Verify a time-based one-time token against the secret and return the delta."," * By default, it verifies the token at the current time window, with no leeway"," * (no look-ahead or look-behind). A token validated at the current time window"," * will have a delta of 0."," *"," * You can specify a window to add more leeway to the verification process."," * Setting the window param will check for the token at the given counter value"," * as well as `window` tokens ahead and `window` tokens behind (two-sided"," * window). See param for more info."," *"," * `verifyDelta()` will return the delta between the counter value of the token"," * and the given counter value. For example, if given a time at counter 1000 and"," * a window of 5, `verifyDelta()` will look at tokens from 995 to 1005,"," * inclusive. In other words, if the time-step is 30 seconds, it will look at"," * tokens from 2.5 minutes ago to 2.5 minutes in the future, inclusive."," * If it finds it at counter position 1002, it will return `{ delta: 2 }`."," * If it finds it at counter position 997, it will return `{ delta: -3 }`."," *"," * @param {Object} options"," * @param {String} options.secret Shared secret key"," * @param {String} options.token Passcode to validate"," * @param {Integer} [options.time] Time in seconds with which to calculate"," *   counter value. Defaults to `Date.now()`."," * @param {Integer} [options.step=30] Time step in seconds"," * @param {Integer} [options.epoch=0] Initial time in seconds since the UNIX"," *   epoch from which to calculate the counter value. Defaults to 0 (no offset)."," * @param {Integer} [options.counter] Counter value, calculated by default."," * @param {Integer} [options.digits=6] The number of digits for the one-time"," *   passcode."," * @param {Integer} [options.window=0] The allowable margin for the counter."," *   The function will check \"W\" codes in the future and the past against the"," *   provided passcode, e.g. if W = 5, and C = 1000, this function will check"," *   the passcode against all One Time Passcodes between 995 and 1005,"," *   inclusive."," * @param {String} [options.encoding=\"ascii\"] Key encoding (ascii, hex,"," *   base32, base64)."," * @param {String} [options.algorithm=\"sha1\"] Hash algorithm (sha1, sha256,"," *   sha512)."," * @return {Object} On success, returns an object with the time step"," *   difference between the client and the server as the `delta` property (e.g."," *   `{ delta: 0 }`)."," * @method totp․verifyDelta"," * @global"," */","","exports.totp.verifyDelta = function totpVerifyDelta (options) {","  // shadow options","  options = Object.create(options);","","  // unpack options","  var window = parseInt(options.window, 10) || 0;","","  // calculate default counter value","  if (options.counter == null) options.counter = exports._counter(options);","","  // adjust for two-sided window","  options.counter -= window;","  options.window += window;","","  // pass to hotp.verifyDelta","  var delta = exports.hotp.verifyDelta(options);","","  // adjust for two-sided window","  if (delta) {","    delta.delta -= window;","  }","","  return delta;","};","","/**"," * Verify a time-based one-time token against the secret and return true if it"," * verifies. Helper function for verifyDelta() that returns a boolean instead of"," * an object. For more on how to use a window with this, see"," * {@link totp.verifyDelta}."," *"," * @param {Object} options"," * @param {String} options.secret Shared secret key"," * @param {String} options.token Passcode to validate"," * @param {Integer} [options.time] Time in seconds with which to calculate"," *   counter value. Defaults to `Date.now()`."," * @param {Integer} [options.step=30] Time step in seconds"," * @param {Integer} [options.epoch=0] Initial time in seconds  since the UNIX"," *   epoch from which to calculate the counter value. Defaults to 0 (no offset)."," * @param {Integer} [options.counter] Counter value, calculated by default."," * @param {Integer} [options.digits=6] The number of digits for the one-time"," *   passcode."," * @param {Integer} [options.window=0] The allowable margin for the counter."," *   The function will check \"W\" codes in the future and the past against the"," *   provided passcode, e.g. if W = 5, and C = 1000, this function will check"," *   the passcode against all One Time Passcodes between 995 and 1005,"," *   inclusive."," * @param {String} [options.encoding=\"ascii\"] Key encoding (ascii, hex,"," *   base32, base64)."," * @param {String} [options.algorithm=\"sha1\"] Hash algorithm (sha1, sha256,"," *   sha512)."," * @return {Boolean} Returns true if the token matches within the given"," *   window, false otherwise."," * @method totp․verify"," * @global"," */","exports.totp.verify = function totpVerify (options) {","  return exports.totp.verifyDelta(options) != null;","};","","/**"," * @typedef GeneratedSecret"," * @type Object"," * @property {String} ascii ASCII representation of the secret"," * @property {String} hex Hex representation of the secret"," * @property {String} base32 Base32 representation of the secret"," * @property {String} qr_code_ascii URL for the QR code for the ASCII secret."," * @property {String} qr_code_hex URL for the QR code for the hex secret."," * @property {String} qr_code_base32 URL for the QR code for the base32 secret."," * @property {String} google_auth_qr URL for the Google Authenticator otpauth"," *   URL's QR code."," * @property {String} otpauth_url Google Authenticator-compatible otpauth URL."," */","","/**"," * Generates a random secret with the set A-Z a-z 0-9 and symbols, of any length"," * (default 32). Returns the secret key in ASCII, hexadecimal, and base32 format,"," * along with the URL used for the QR code for Google Authenticator (an otpauth"," * URL). Use a QR code library to generate a QR code based on the Google"," * Authenticator URL to obtain a QR code you can scan into the app."," *"," * @param {Object} options"," * @param {Integer} [options.length=32] Length of the secret"," * @param {Boolean} [options.symbols=false] Whether to include symbols"," * @param {Boolean} [options.otpauth_url=true] Whether to output a Google"," *   Authenticator-compatible otpauth:// URL (only returns otpauth:// URL, no"," *   QR code)"," * @param {String} [options.name] The name to use with Google Authenticator."," * @param {Boolean} [options.qr_codes=false] (DEPRECATED. Do not use to prevent"," *   leaking of secret to a third party. Use your own QR code implementation.)"," *   Output QR code URLs for the token."," * @param {Boolean} [options.google_auth_qr=false] (DEPRECATED. Do not use to"," *   prevent leaking of secret to a third party. Use your own QR code"," *   implementation.) Output a Google Authenticator otpauth:// QR code URL."," * @return {Object}"," * @return {GeneratedSecret} The generated secret key."," */","exports.generateSecret = function generateSecret (options) {","  // options","  if (!options) options = {};","  var length = options.length || 32;","  var name = encodeURIComponent(options.name || 'SecretKey');","  var qr_codes = options.qr_codes || false;","  var google_auth_qr = options.google_auth_qr || false;","  var otpauth_url = options.otpauth_url != null ? options.otpauth_url : true;","  var symbols = true;","","  // turn off symbols only when explicity told to","  if (options.symbols !== undefined && options.symbols === false) {","    symbols = false;","  }","","  // generate an ascii key","  var key = this.generateSecretASCII(length, symbols);","","  // return a SecretKey with ascii, hex, and base32","  var SecretKey = {};","  SecretKey.ascii = key;","  SecretKey.hex = Buffer(key, 'ascii').toString('hex');","  SecretKey.base32 = base32.encode(Buffer(key)).toString().replace(/=/g, '');","","  // generate some qr codes if requested","  if (qr_codes) {","    console.warn('Speakeasy - Deprecation Notice - generateSecret() QR codes are deprecated and no longer supported. Please use your own QR code implementation.');","    SecretKey.qr_code_ascii = 'https://chart.googleapis.com/chart?chs=166x166&chld=L|0&cht=qr&chl=' + encodeURIComponent(SecretKey.ascii);","    SecretKey.qr_code_hex = 'https://chart.googleapis.com/chart?chs=166x166&chld=L|0&cht=qr&chl=' + encodeURIComponent(SecretKey.hex);","    SecretKey.qr_code_base32 = 'https://chart.googleapis.com/chart?chs=166x166&chld=L|0&cht=qr&chl=' + encodeURIComponent(SecretKey.base32);","  }","","  // add in the Google Authenticator-compatible otpauth URL","  if (otpauth_url) {","    SecretKey.otpauth_url = exports.otpauthURL({","      secret: SecretKey.ascii,","      label: name","    });","  }","","  // generate a QR code for use in Google Authenticator if requested","  if (google_auth_qr) {","    console.warn('Speakeasy - Deprecation Notice - generateSecret() Google Auth QR code is deprecated and no longer supported. Please use your own QR code implementation.');","    SecretKey.google_auth_qr = 'https://chart.googleapis.com/chart?chs=166x166&chld=L|0&cht=qr&chl=' + encodeURIComponent(exports.otpauthURL({ secret: SecretKey.base32, label: name }));","  }","","  return SecretKey;","};","","// Backwards compatibility - generate_key is deprecated","exports.generate_key = util.deprecate(function (options) {","  return exports.generateSecret(options);","}, 'Speakeasy - Deprecation Notice - `generate_key()` is depreciated, please use `generateSecret()` instead.');","","/**"," * Generates a key of a certain length (default 32) from A-Z, a-z, 0-9, and"," * symbols (if requested)."," *"," * @param  {Integer} [length=32]  The length of the key."," * @param  {Boolean} [symbols=false] Whether to include symbols in the key."," * @return {String} The generated key."," */","exports.generateSecretASCII = function generateSecretASCII (length, symbols) {","  var bytes = crypto.randomBytes(length || 32);","  var set = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';","  if (symbols) {","    set += '!@#$%^&*()<>?/[]{},.:;';","  }","","  var output = '';","  for (var i = 0, l = bytes.length; i < l; i++) {","    output += set[Math.floor(bytes[i] / 255.0 * (set.length - 1))];","  }","  return output;","};","","// Backwards compatibility - generate_key_ascii is deprecated","exports.generate_key_ascii = util.deprecate(function (length, symbols) {","  return exports.generateSecretASCII(length, symbols);","}, 'Speakeasy - Deprecation Notice - `generate_key_ascii()` is depreciated, please use `generateSecretASCII()` instead.');","","/**"," * Generate a Google Authenticator-compatible otpauth:// URL for passing the"," * secret to a mobile device to install the secret."," *"," * Authenticator considers TOTP codes valid for 30 seconds. Additionally,"," * the app presents 6 digits codes to the user. According to the"," * documentation, the period and number of digits are currently ignored by"," * the app."," *"," * To generate a suitable QR Code, pass the generated URL to a QR Code"," * generator, such as the `qr-image` module."," *"," * @param {Object} options"," * @param {String} options.secret Shared secret key"," * @param {String} options.label Used to identify the account with which"," *   the secret key is associated, e.g. the user's email address."," * @param {String} [options.type=\"totp\"] Either \"hotp\" or \"totp\"."," * @param {Integer} [options.counter] The initial counter value, required"," *   for HOTP."," * @param {String} [options.issuer] The provider or service with which the"," *   secret key is associated."," * @param {String} [options.algorithm=\"sha1\"] Hash algorithm (sha1, sha256,"," *   sha512)."," * @param {Integer} [options.digits=6] The number of digits for the one-time"," *   passcode. Currently ignored by Google Authenticator."," * @param {Integer} [options.period=30] The length of time for which a TOTP"," *   code will be valid, in seconds. Currently ignored by Google"," *   Authenticator."," * @param {String} [options.encoding] Key encoding (ascii, hex, base32,"," *   base64). If the key is not encoded in Base-32, it will be reencoded."," * @return {String} A URL suitable for use with the Google Authenticator."," * @throws Error if secret or label is missing, or if hotp is used and a","    counter is missing, if the type is not one of `hotp` or `totp`, if the","    number of digits is non-numeric, or an invalid period is used. Warns if","    the number of digits is not either 6 or 8 (though 6 is the only one","    supported by Google Authenticator), and if the hashihng algorithm is","    not one of the supported SHA1, SHA256, or SHA512."," * @see https://github.com/google/google-authenticator/wiki/Key-Uri-Format"," */","","exports.otpauthURL = function otpauthURL (options) {","  // unpack options","  var secret = options.secret;","  var label = options.label;","  var issuer = options.issuer;","  var type = (options.type || 'totp').toLowerCase();","  var counter = options.counter;","  var algorithm = options.algorithm;","  var digits = options.digits;","  var period = options.period;","  var encoding = options.encoding || 'ascii';","","  // validate type","  switch (type) {","    case 'totp':","    case 'hotp':","      break;","    default:","      throw new Error('Speakeasy - otpauthURL - Invalid type `' + type + '`; must be `hotp` or `totp`');","  }","","  // validate required options","  if (!secret) throw new Error('Speakeasy - otpauthURL - Missing secret');","  if (!label) throw new Error('Speakeasy - otpauthURL - Missing label');","","  // require counter for HOTP","  if (type === 'hotp' && (counter === null || typeof counter === 'undefined')) {","    throw new Error('Speakeasy - otpauthURL - Missing counter value for HOTP');","  }","","  // convert secret to base32","  if (encoding !== 'base32') secret = new Buffer(secret, encoding);","  if (Buffer.isBuffer(secret)) secret = base32.encode(secret);","","  // build query while validating","  var query = {secret: secret};","  if (issuer) query.issuer = issuer;","","  // validate algorithm","  if (algorithm != null) {","    switch (algorithm.toUpperCase()) {","      case 'SHA1':","      case 'SHA256':","      case 'SHA512':","        break;","      default:","        console.warn('Speakeasy - otpauthURL - Warning - Algorithm generally should be SHA1, SHA256, or SHA512');","    }","    query.algorithm = algorithm.toUpperCase();","  }","","  // validate digits","  if (digits != null) {","    if (isNaN(digits)) {","      throw new Error('Speakeasy - otpauthURL - Invalid digits `' + digits + '`');","    } else {","      switch (parseInt(digits, 10)) {","        case 6:","        case 8:","          break;","        default:","          console.warn('Speakeasy - otpauthURL - Warning - Digits generally should be either 6 or 8');","      }","    }","    query.digits = digits;","  }","","  // validate period","  if (period != null) {","    period = parseInt(period, 10);","    if (~~period !== period) {","      throw new Error('Speakeasy - otpauthURL - Invalid period `' + period + '`');","    }","    query.period = period;","  }","","  // return url","  return url.format({","    protocol: 'otpauth',","    slashes: true,","    hostname: type,","    pathname: label,","    query: query","  });","};",""],"l":{"3":1,"4":1,"5":1,"6":1,"23":1,"24":0,"27":0,"28":0,"29":0,"30":0,"33":0,"34":0,"35":0,"39":0,"40":0,"45":0,"46":0,"47":0,"49":0,"52":0,"56":0,"59":0,"62":0,"88":1,"91":0,"92":0,"95":0,"98":0,"101":0,"107":0,"110":0,"114":1,"153":1,"154":0,"157":0,"160":0,"161":0,"162":0,"163":0,"166":0,"167":0,"171":0,"174":0,"175":0,"179":0,"180":0,"182":0,"184":0,"217":1,"218":0,"239":1,"240":0,"241":0,"244":0,"245":0,"247":0,"285":1,"287":0,"290":0,"293":0,"297":1,"345":1,"347":0,"350":0,"353":0,"356":0,"357":0,"360":0,"363":0,"364":0,"367":0,"401":1,"402":0,"442":1,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"453":0,"454":0,"458":0,"461":0,"462":0,"463":0,"464":0,"467":0,"468":0,"469":0,"470":0,"471":0,"475":0,"476":0,"483":0,"484":0,"485":0,"488":0,"492":1,"493":0,"504":1,"505":0,"506":0,"507":0,"508":0,"511":0,"512":0,"513":0,"515":0,"519":1,"520":0,"563":1,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"576":0,"579":0,"581":0,"585":0,"586":0,"589":0,"590":0,"594":0,"595":0,"598":0,"599":0,"602":0,"603":0,"607":0,"609":0,"611":0,"615":0,"616":0,"617":0,"619":0,"622":0,"624":0,"627":0,"631":0,"632":0,"633":0,"634":0,"636":0,"640":0}}}